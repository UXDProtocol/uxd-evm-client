/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockController,
  MockControllerInterface,
} from "../../../contracts/test/MockController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depository",
    outputs: [
      {
        internalType: "contract IDepository",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_depository",
        type: "address",
      },
    ],
    name: "updateDepository",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061041d806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806347e7ef241461005157806369328dec14610066578063bedd12a514610079578063c461fb1f146100c2575b600080fd5b61006461005f366004610324565b610117565b005b61006461007436600461034e565b6101b9565b6000546100999073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100646100d036600461038a565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000546040517f47e7ef2400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052909116906347e7ef24906044016020604051808303816000875af1158015610190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b491906103ac565b505050565b600080546040517f1e9a695000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301526024820186905290911690631e9a6950906044016020604051808303816000875af1158015610233573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025791906103ac565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018390529192509085169063a9059cbb906044016020604051808303816000875af11580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f491906103c5565b5050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461031f57600080fd5b919050565b6000806040838503121561033757600080fd5b610340836102fb565b946020939093013593505050565b60008060006060848603121561036357600080fd5b61036c846102fb565b925060208401359150610381604085016102fb565b90509250925092565b60006020828403121561039c57600080fd5b6103a5826102fb565b9392505050565b6000602082840312156103be57600080fd5b5051919050565b6000602082840312156103d757600080fd5b815180151581146103a557600080fdfea2646970667358221220c1821d4df788bce2eaf0785476aff4271cbff6874d2a835211e7e7d1df31e14b64736f6c63430008110033";

type MockControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockController__factory extends ContractFactory {
  constructor(...args: MockControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockController> {
    return super.deploy(overrides || {}) as Promise<MockController>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockController {
    return super.attach(address) as MockController;
  }
  override connect(signer: Signer): MockController__factory {
    return super.connect(signer) as MockController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockControllerInterface {
    return new utils.Interface(_abi) as MockControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockController {
    return new Contract(address, _abi, signerOrProvider) as MockController;
  }
}
