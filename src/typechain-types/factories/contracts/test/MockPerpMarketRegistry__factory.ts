/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockPerpMarketRegistry,
  MockPerpMarketRegistryInterface,
} from "../../../contracts/test/MockPerpMarketRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getFeeRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060c38061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063edd0b5cb14602d575b600080fd5b604060383660046052565b506298968090565b60405190815260200160405180910390f35b600060208284031215606357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114608657600080fd5b939250505056fea264697066735822122054deed69c9a9a2d0ec32dce2c3c439b538cbe679311dd254554ed86bd7d53a3664736f6c63430008110033";

type MockPerpMarketRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPerpMarketRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPerpMarketRegistry__factory extends ContractFactory {
  constructor(...args: MockPerpMarketRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockPerpMarketRegistry> {
    return super.deploy(overrides || {}) as Promise<MockPerpMarketRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockPerpMarketRegistry {
    return super.attach(address) as MockPerpMarketRegistry;
  }
  override connect(signer: Signer): MockPerpMarketRegistry__factory {
    return super.connect(signer) as MockPerpMarketRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPerpMarketRegistryInterface {
    return new utils.Interface(_abi) as MockPerpMarketRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPerpMarketRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockPerpMarketRegistry;
  }
}
