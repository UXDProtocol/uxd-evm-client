/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UXDRouter,
  UXDRouterInterface,
} from "../../../contracts/core/UXDRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "depository",
        type: "address",
      },
    ],
    name: "Exists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "NoDepositoryForMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
    ],
    name: "NotExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RouterNotController",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "depository",
        type: "address",
      },
    ],
    name: "DepositoryRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "depository",
        type: "address",
      },
    ],
    name: "DepositoryUnregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
    ],
    name: "depositoriesForAsset",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "findDepositoryForAssetDeposit",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "findDepositoryForRedeem",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depository",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
    ],
    name: "registerDepository",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depository",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetToken",
        type: "address",
      },
    ],
    name: "unregisterDepository",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61095e8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638835610e1161005b5780638835610e146100fa5780638da5cb5b1461010d5780639c93ed2a1461008d578063f2fde38b1461011e57600080fd5b806331f32a061461008d578063576440e4146100bd578063715018a6146100dd5780637d77c9d5146100e7575b600080fd5b6100a061009b3660046107f4565b610131565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d06100cb36600461081e565b610145565b6040516100b49190610839565b6100e56101bb565b005b6100e56100f5366004610886565b610226565b6100e5610108366004610886565b61044d565b6000546001600160a01b03166100a0565b6100e561012c36600461081e565b61057f565b600061013c83610661565b90505b92915050565b6001600160a01b0381166000908152600160209081526040918290208054835181840281018401909452808452606093928301828280156101af57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610191575b50505050509050919050565b6000546001600160a01b0316331461021a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61022460006106d4565b565b6000546001600160a01b031633146102805760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610211565b6001600160a01b0381166000908152600160205260408120805482036102c4576040516319b604cf60e31b81526001600160a01b0384166004820152602401610211565b60005b81548110156103dd57846001600160a01b03168282815481106102ec576102ec6108b9565b6000918252602090912001546001600160a01b0316036103cb5781546001935082906103199085906108e5565b81548110610329576103296108b9565b9060005260206000200160009054906101000a90046001600160a01b0316828281548110610359576103596108b9565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081805480610397576103976108f8565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff191690550190556103dd565b806103d58161090e565b9150506102c7565b5081610407576040516319b604cf60e31b81526001600160a01b0384166004820152602401610211565b836001600160a01b0316836001600160a01b03167faf217fafb3cc2121512a93a9c04444412047986aa5c193da328973f4169e8a1d60405160405180910390a350505050565b6000546001600160a01b031633146104a75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610211565b60006104b38284610731565b90506001600160a01b03811615610509576040517f06c1e5280000000000000000000000000000000000000000000000000000000081526001600160a01b03808416600483015284166024820152604401610211565b6001600160a01b038281166000818152600160208181526040808420805493840181558452908320909101805473ffffffffffffffffffffffffffffffffffffffff19169488169485179055517fd390cb409734e3ce7ab74cea027a942524ab2195c20ff2259d6114482f6c4fe69190a3505050565b6000546001600160a01b031633146105d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610211565b6001600160a01b0381166106555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610211565b61065e816106d4565b50565b6001600160a01b0381166000908152600160205260408120805482036106a5576040516319b604cf60e31b81526001600160a01b0384166004820152602401610211565b806000815481106106b8576106b86108b9565b6000918252602090912001546001600160a01b03169392505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166000908152600160205260408120815b81548110156107cd57836001600160a01b0316828281548110610770576107706108b9565b6000918252602090912001546001600160a01b0316036107bb5781818154811061079c5761079c6108b9565b6000918252602090912001546001600160a01b0316925061013f915050565b806107c58161090e565b91505061074b565b506000949350505050565b80356001600160a01b03811681146107ef57600080fd5b919050565b6000806040838503121561080757600080fd5b610810836107d8565b946020939093013593505050565b60006020828403121561083057600080fd5b61013c826107d8565b6020808252825182820181905260009190848201906040850190845b8181101561087a5783516001600160a01b031683529284019291840191600101610855565b50909695505050505050565b6000806040838503121561089957600080fd5b6108a2836107d8565b91506108b0602084016107d8565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561013f5761013f6108cf565b634e487b7160e01b600052603160045260246000fd5b60006000198203610921576109216108cf565b506001019056fea2646970667358221220873a31ef09f71bbf78e8d7e32506219a44884ee1cc3042b01a97c2acae815ba164736f6c63430008110033";

type UXDRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UXDRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UXDRouter__factory extends ContractFactory {
  constructor(...args: UXDRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UXDRouter> {
    return super.deploy(overrides || {}) as Promise<UXDRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UXDRouter {
    return super.attach(address) as UXDRouter;
  }
  override connect(signer: Signer): UXDRouter__factory {
    return super.connect(signer) as UXDRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UXDRouterInterface {
    return new utils.Interface(_abi) as UXDRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UXDRouter {
    return new Contract(address, _abi, signerOrProvider) as UXDRouter;
  }
}
